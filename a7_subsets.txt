def find_subsets_with_sum(S, target_sum):
    def backtrack(start, current_subset, current_sum):
        if current_sum == target_sum:
            subsets.append(current_subset.copy())
            return
        if current_sum > target_sum or start == len(S):
            return
        for i in range(start, len(S)):
            current_subset.append(S[i])
            backtrack(i + 1, current_subset, current_sum + S[i])
            current_subset.pop()
    subsets = []
    print(f"Subsets of {S} with a sum of {target_sum}:")
    backtrack(0, [], 0)
    if not subsets:
        print("No subsets found.")
    else:
        for subset in subsets:
            print("Solution:", subset)

S = [1, 2, 5, 6, 8]
d = 9
find_subsets_with_sum(S, d) 
